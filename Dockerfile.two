# ベースイメージの指定
FROM golang:latest as builder

# Goアプリケーションのビルド
WORKDIR /app/backend

ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64
ENV GOCACHE=/root/.cache/go-build
ENV GOMODCACHE=/go/pkg/mod

COPY ./backend/v2/go.mod ./backend/v2/go.sum ./
RUN --mount=type=cache,target=${GOCACHE} \
  --mount=type=cache,target=${GOMODCACHE} \
  go mod download

COPY ./backend/v2 ./
RUN --mount=type=cache,target=${GOCACHE} \
  --mount=type=cache,target=${GOMODCACHE} \
  go build -o /app/backend/main

# ベースイメージの指定
FROM ubuntu:latest

# 必要なパッケージのインストール
RUN apt-get update -y \
  && apt-get install -y inotify-tools gnuplot fonts-ipafont \
  && rm -rf /var/lib/apt/lists/*

# ビルドされたGoアプリケーションをコピー
COPY --from=builder /app/backend/main /app/backend/main

# スクリプトをコピーして実行可能にする
COPY ./graphplotter/watch_directory.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/watch_directory.sh

RUN mkdir /app/images

RUN /app/backend/main &

# 監視するディレクトリを指定してシェルスクリプトを実行
WORKDIR /app/scripts
RUN watch_directory.sh

ENTRYPOINT [ "./app/backend/main" ]

# なんかうまくいかなかったので、
# sshしてから`mkdir /app/images`と
# `/app/backend/main &` + `Ctrl + C`を実行した
# `apt-get update`と
# `apt-get install fonts-ipafont`これも実行した
